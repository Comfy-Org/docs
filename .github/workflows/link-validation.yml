name: Link Validation

on:
  pull_request:
    paths:
      - '**/*.mdx'
      - '**/*.md'
  push:
    branches: [main]
    paths:
      - '**/*.mdx'
      - '**/*.md'

jobs:
  validate-links:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Run link validation and auto-fix
        run: python .github/scripts/validate-links.py

      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push fixes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Fix link formatting issues

          Automatically fixed the following link issues:
          - Removed .mdx extensions from links
          - Added missing leading slashes to relative paths
          
          ðŸ¤– Auto-fixed by Link Validation Action"
          
          # Push to the correct branch
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git push origin HEAD:${{ github.head_ref }}
          else
            git push origin HEAD:${{ github.ref_name }}
          fi

      - name: Comment PR (if validation fails)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const errors = fs.readFileSync('/tmp/link-errors.txt', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## Link Validation Failed\n\n${errors}`
              });
            } catch (error) {
              console.log('No error file found');
            }